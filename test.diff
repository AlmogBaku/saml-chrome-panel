diff --git a/unpacked/devtools.js b/unpacked/devtools.js
index dba9791..1a42798 100644
--- a/unpacked/devtools.js
+++ b/unpacked/devtools.js
@@ -3,7 +3,7 @@
 // found in the LICENSE file.
 
 chrome.devtools.panels.create(
-    'SAML Chrome',
+    'SAML Trace',
     'panel/assets/images/SAMLforChromeLogoSquare.png', // No icon path
     'panel/panel.html',
     null // no callback needed
diff --git a/unpacked/panel/assets/javascripts/panel.js b/unpacked/panel/assets/javascripts/panel.js
index 504ef45..f6a7f97 100755
--- a/unpacked/panel/assets/javascripts/panel.js
+++ b/unpacked/panel/assets/javascripts/panel.js
@@ -45,7 +45,9 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
     $scope.activeId = null;
     $scope.requests = {};
     $scope.showSamlRequests = {};
-    $scope.showAll = true;
+    $scope.showAll = false;
+    $scope.showOriginalSAML = false;
+    $scope.currentDetailTab = "tab-saml";
 
     $scope.activeCookies = [];
     $scope.activeHeaders = [];
@@ -55,7 +57,6 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
     $scope.activeResponseCookies = [];
     $scope.activeResponseHeaders = [];
     $scope.activeSaml = null;
-    $scope.activeRequestURL = "There are no SAML messages to display";
 
     $scope.showIncomingRequests = true;
 
@@ -75,6 +76,10 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
         });
 
         chrome.devtools.network.onRequestFinished.addListener(function(request) {
+            // do not show requests to chrome extension resources
+            if (request.request.url.startsWith("chrome-extension://")) {
+                return;
+            }
             $scope.handleSAMLHeaders(request);
         });
     };
@@ -146,6 +151,13 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
     };
 
     $scope.createToolbar = function() {
+        toolbar.createToggleButton('file-text-o', 'SAML Format', false, function() {
+            ga('send', 'event', 'button', 'click', 'Toggle SAML Format');
+            $scope.$apply(function() {
+                $scope.showOriginalSAML = !$scope.showOriginalSAML;
+                $scope.displaySaml();
+            });
+        });
         toolbar.createButton('chain', 'Update All Link/Form Targets to _self', false, function() {
             ga('send', 'event', 'button', 'click', 'Update All Link Targets');
             $scope.$apply(function() {
@@ -168,7 +180,7 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
                 $('#ImportInput').click();
             });
         });
-        toolbar.createButton('tasks', 'SAML Filter', false, function() {
+        toolbar.createToggleButton('tasks', 'SAML Filter', false, function() {
             ga('send', 'event', 'button', 'click', 'Toggle Traffic');
             $scope.$apply(function() {
                 $scope.showAll = !$scope.showAll;
@@ -246,7 +258,7 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
                 $scope.showSamlRequests[requestId] = data;
             }
 
-            if ($scope.showIncomingRequests) {
+            if ($scope.showIncomingRequests && $scope.showSamlRequests[requestId]) {
                 $scope.setActive(requestId);
             }
         });
@@ -256,7 +268,6 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
         $scope.requests = {};
         $scope.activeId = null;
         $scope.showSamlRequests = {};
-        $scope.showAll = true;
 
         $scope.activeCookies = [];
         $scope.activeHeaders = [];
@@ -266,9 +277,9 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
         $scope.activeResponseCookies = [];
         $scope.activeResponseHeaders = [];
         $scope.activeSaml = null;
-        $scope.activeRequestURL = "There are no SAML messages to display";
 
         $scope.showIncomingRequests = true;
+        document.getElementById("tab-saml-codemirror").style.visibility = "hidden";
 
     };
 
@@ -283,13 +294,12 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
         $scope.activeResponseCookies = $scope.requests[requestId].response_cookies;
         $scope.activeResponseHeaders = $scope.requests[requestId].response_headers;
         $scope.activeSaml = $scope.requests[requestId].saml;
-        $scope.activeRequestURL = $scope.requests[requestId].request_url;
 
-        var lastRequestId = Object.keys($scope.requests)[Object.keys($scope.requests).length - 1];
+        var lastRequestId = Object.keys($scope.showSamlRequests)[Object.keys($scope.showSamlRequests).length - 1];
 
         $scope.showIncomingRequests = requestId == lastRequestId;
 
-        if ($scope.activeSaml == null) {
+        if ($scope.activeSaml == null && $scope.currentDetailTab === "tab-saml") {
             $("#tabs").tabs("option", "active", $("tab-request" + "Selector").index() - 1);
         }
     };
@@ -309,6 +319,9 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
                 $scope.showSamlRequests[request] = $scope.requests[request];
             }
         });
+        var lastRequestId = Object.keys($scope.showSamlRequests)[Object.keys($scope.showSamlRequests).length - 1];
+
+        $scope.showIncomingRequests = $scope.activeId == lastRequestId;
     }
 
     $scope.createKeypairs = function(data) {
@@ -352,38 +365,67 @@ SAMLChrome.controller('PanelController', function PanelController($scope, $http,
     });
 
     $scope.isSaml = function(requestId) {
-        if ($scope.requests[requestId].saml != null) {
-            return "SAML";
+    }
+
+    $scope.getTrafficStyle = function(request) {
+        if (request.saml != null) {
+            var status = request.response_status;
+            if (status.startsWith("2")) {
+                return "success";
+            } else if (status.startsWith("3")) {
+                return "redirect";
+            } else {
+                return "error"
+            }
         }
+        return "";
     }
 
-    $scope.displaySaml = function() {
-        var options = {
-            source: $scope.activeSaml,
-            mode: "beautify", //  beautify, diff, minify, parse
-            lang: "xml",
-            wrap: 100,
-            inchar: " ", // indent character
-            insize: 3 // number of indent characters per indent
+    $scope.selectDetailTab = function(tabId) {
+        $scope.currentDetailTab = tabId;
+        if (tabId === "tab-saml") {
+            $scope.displaySaml();
         }
+    }
+
+    $scope.displaySaml = function() {
         if ($scope.activeSaml != null) {
-           var pd = prettydiff(options); // returns and array: [beautified, report]
+            document.getElementById("tab-saml-codemirror").style.visibility = "visible";
+            
+            var samlContent = $scope.activeSaml;
+            if (!$scope.showOriginalSAML) {
+                samlContent = $scope.getPrettyXML(samlContent);
+            }
+
+            if ($scope.myCodeMirror) {
+                $scope.myCodeMirror.getDoc().setValue(samlContent);
+                return;
+            }
 
-            var pretty = pd[0];
             document.getElementById("tab-saml-codemirror").innerHTML = "";
             var myCodeMirror = CodeMirror(document.getElementById("tab-saml-codemirror"), {
-              value: pretty,
+              value: samlContent,
               mode:  "xml",
-              lineNumbers: true
+              lineNumbers: true,
+              lineWrapping: true
             });
+            $scope.myCodeMirror = myCodeMirror;
+        }
+    }
 
-            document.getElementById("tab-saml-text-heading").style.visibility = "visible";
-            document.getElementById("tab-saml-text").innerText = $scope.activeSaml;
-        } else {
-            document.getElementById("tab-saml-codemirror").innerHTML = "";
-            document.getElementById("tab-saml-text-heading").style.visibility = "hidden";
-            document.getElementById("tab-saml-text").innerText = "";
+    $scope.getPrettyXML = function(source) {
+        var options = {
+            source: source,
+            mode: "beautify", //  beautify, diff, minify, parse
+            lang: "xml",
+            wrap: 100,
+            inchar: " ", // indent character
         }
+        var pd = prettydiff(options); // returns and array: [beautified, report]
+
+        var pretty = pd[0];
+
+        return pretty;
     }
 
 });
\ No newline at end of file
diff --git a/unpacked/panel/assets/javascripts/toolbar.js b/unpacked/panel/assets/javascripts/toolbar.js
index 2c38d72..3ac93be 100755
--- a/unpacked/panel/assets/javascripts/toolbar.js
+++ b/unpacked/panel/assets/javascripts/toolbar.js
@@ -15,18 +15,32 @@ return {
         });
     },
 
+    createToggleButton: function(icon, name, input, callback)
+    {
+        this.buttons.push({
+            icon: icon,
+            name: name,
+            input: input,
+            toggle: true,
+            callback: callback
+        });
+    },
+
     render: function()
     {
         var $html = $('<div class="toolbar"></div>');
 
         $.each(this.buttons, function(i, button)
         {
-            var $button;
-
-            if (button.input === true) {
-                $button = $('<a href="#" title="' + button.name + '"><i class="fa fa-' + button.icon + '"></i></a>');
-            } else {
-                $button = $('<a href="#" title="' + button.name + '"><i class="fa fa-' + button.icon + '"></i></a>');
+            var $button = $('<a href="#" title="' + button.name + '"><i class="fa fa-' + button.icon + '"></i></a>');
+            if (button.toggle === true) {
+                $button.on('click', function() {
+                    if ($button.hasClass("selected")) {
+                        $button.removeClass("selected");
+                    } else {
+                        $button.addClass("selected");
+                    }
+                });
             }
             $button.on('click', button.callback);
 
diff --git a/unpacked/panel/assets/stylesheets/panel.css b/unpacked/panel/assets/stylesheets/panel.css
index d41867c..dc86376 100755
--- a/unpacked/panel/assets/stylesheets/panel.css
+++ b/unpacked/panel/assets/stylesheets/panel.css
@@ -6,7 +6,6 @@
 
 body {
 	background: #fff;
-	font-family: 'Lucida Grande', 'Lucida Sans Unicode', sans-serif;
 }
 
 th, td {
@@ -29,6 +28,14 @@ th, td {
 	color: rgb(59, 59, 59);
 }
 
+.toolbar a.selected {
+	color: rgb(62, 130, 240);
+}
+
+.toolbar a.selected:hover {
+	color: rgb(25, 108, 251);
+}
+
 .split-view {
 	bottom: 0;
 	left: 0;
@@ -46,7 +53,7 @@ th, td {
 	top: 0;
 }
 
-@media screen and (max-width: 9	00px) {
+@media screen and (max-width: 900px) {
 	.split-view-contents-requests {
 		bottom: 50%;
 		width: 100%;
@@ -66,7 +73,6 @@ th, td {
 	.split-view-contents-details {
 		left: 480px;
 		right: 0;
-		width: auto;
 	}
 }
 
@@ -90,7 +96,7 @@ th, td {
 .data-grid th {
 	border-bottom: 1px solid rgb(205, 205, 205);
 	border-right: 1px solid rgb(205, 205, 205);
-	height: 30px;
+	height: 25px;
 	padding: 0 4px;
 	white-space: nowrap;
 }
@@ -98,7 +104,7 @@ th, td {
 .data-grid td {
 	border-right: 1px solid rgb(205, 205, 205);
 	overflow: hidden;
-	padding: 8px 4px;
+	padding: 0px 5px;
 	vertical-align: middle;
 	white-space: nowrap;
 }
@@ -116,7 +122,7 @@ th, td {
 	overflow-y: overlay;
 	position: absolute;
 	right: 0;
-	top: 30px;
+	top: 25px;
 }
 
 .data-container table {
@@ -124,7 +130,7 @@ th, td {
 }
 
 .data-container tr {
-	height: 28px;
+	height: 20px;
 }
 
 .data-container tr.sizing {
@@ -255,8 +261,8 @@ th, td {
 
 .tabbed-pane-header {
 	border-bottom: 1px solid rgb(205, 205, 205);
-	padding-left: 25px;
-	padding-top: 7px;
+	padding-left: 0;
+	padding-top: 1px;
 	white-space: nowrap;
 }
 
@@ -280,7 +286,7 @@ th, td {
 	height: 21px;
 	margin-top: 2px;
 	overflow: hidden;
-	padding: 3px 6px 2px 6px;
+	padding: 1px 6px 1px 6px;
 	text-overflow: ellipsis;
 	vertical-align: middle;
 	white-space: nowrap;
@@ -289,7 +295,7 @@ th, td {
 .tabbed-pane-header-tab-title {
 	color: #000;
 	display: block;
-	font-size: 11px;
+	font-size: 12px;
 	min-width: 40px;
 	text-align: center;
 	text-decoration: none;
@@ -317,9 +323,10 @@ th, td {
 }
 
 .data-grid-details table {
-	font-size: 12px;
+	/*font-size: 12px;*/
 	margin-bottom: 6px;
-	table-layout: auto;
+	table-layout: fixed;
+	border: 1px solid rgb(205, 205, 205);
 }
 
 .data-grid-details table tr:nth-child(even) {
@@ -329,8 +336,8 @@ th, td {
 .data-grid-details th {
 	border-bottom: none;
 	border-right: none;
-	font-size: 13px;
-	font-weight: normal;
+	font-size: 12px;
+	font-weight: bold;
 	height: 18px;
 	padding: 0 4px;
 	white-space: nowrap;
@@ -338,10 +345,12 @@ th, td {
 
 .data-grid-details td {
 	border-right: 1px solid #e5e5e5;
+	border-top: 1px solid #e5e5e5;
 	height: auto;
 	line-height: 16px;
 	vertical-align: top;
 	white-space: normal;
+	word-wrap: break-word;
 }
 
 .data-grid-details th:last-child,
@@ -350,14 +359,34 @@ th, td {
 }
 
 .data-grid-details .key {
-	font-size: 12px;
+	/*font-size: 12px;*/
+	font-weight: bold;
 	white-space: nowrap;
 }
 
 /* request details - request */
 
 #tab-request table {
-	margin-bottom: 24px;
+	margin-bottom: 20px;
+}
+
+#tab-response table {
+	margin-bottom: 20px;
+}
+
+#tab-saml {
+	bottom: 0px;
+	left: 0px;
+	overflow-x: hidden;
+	overflow-y: overlay;
+	position: absolute;
+	right: 0px;
+	top: 0px;
+	padding: 10px;
+}
+
+#tab-saml-codemirror {
+	height: 100%;
 }
 
 input[type="file"] {
diff --git a/unpacked/panel/panel.html b/unpacked/panel/panel.html
index 87f4251..5fa4867 100644
--- a/unpacked/panel/panel.html
+++ b/unpacked/panel/panel.html
@@ -28,10 +28,8 @@
                 <thead>
                 <tr>
                     <th class='request'>
-                        Path<br>
+                        Path
                     </th>
-                    <th class='method'>Method</th>
-                    <th class='status'>Status</th>
                 </tr>
                 </thead>
             </table>
@@ -39,18 +37,12 @@
                 <table id="requests" resizable-columns data-resizable-columns-sync="#requests-header">
                     <tr class="sizing">
                         <td class='request'></td>
-                        <td class='method'></td>
-                        <td class='status'></td>
                     </tr>
                     <tr ng-repeat="request in showSamlRequests | orderBy:'id'" ng-click="setActive(request.id)" ng-class="getClass(request.id)" scroll-to-new>
-                        <td class='request' title="{{request.request_url}}">{{request.request_url}}<br/><small>{{isSaml(request.id)}}</small></td>
-                        <td class='method' title="{{request.request_method}}">{{request.request_method}}</td>
-                        <td class='status' title="{{request.response_status}}">{{request.response_status}}</td>
+                        <td class='request {{getTrafficStyle(request)}}' title="{{request.request_url}}">{{request.request_url}}</td>
                     </tr>
                     <tr class="filler">
                         <td class='request'></td>
-                        <td class='method'></td>
-                        <td class='status'></td>
                     </tr>
                 </table>
             </div>
@@ -59,18 +51,17 @@
 
     <div class="split-view-contents split-view-contents-details">
         <div id="tabs" class="tabbed-pane">
-            <div><h3>&nbsp;&nbsp;{{activeRequestURL}}</h3></div>
             <div class="tabbed-pane-header">
                 <div class="tabbed-pane-header-contents">
                     <ul class="tabbed-pane-header-tabs">
                         <li class="tabbed-pane-header-tab" ng-show="activeSaml.length">
-                            <a href="#tab-saml" class="tabbed-pane-header-tab-title" ng-click="displaySaml()">SAML</a>
+                            <a href="#tab-saml" class="tabbed-pane-header-tab-title" ng-click="selectDetailTab('tab-saml')">SAML</a>
                         </li>
                         <li class="tabbed-pane-header-tab">
-                            <a href="#tab-request" class="tabbed-pane-header-tab-title">Request</a>
+                            <a href="#tab-request" class="tabbed-pane-header-tab-title" ng-click="selectDetailTab('tab-request')">Request</a>
                         </li>
                         <li class="tabbed-pane-header-tab">
-                            <a href="#tab-response" class="tabbed-pane-header-tab-title">Response</a>
+                            <a href="#tab-response" class="tabbed-pane-header-tab-title" ng-click="selectDetailTab('tab-response')">Response</a>
                         </li>
                     </ul>
                 </div>
@@ -84,10 +75,6 @@
                 <div id="tab-saml">
                     <div id="tab-saml-codemirror">
                     </div>
-                    <h4 id="tab-saml-text-heading" style='visibility:hidden'>&nbsp;&nbsp;Unformatted SAML</h4>
-                    <div id="tab-saml-text">
-                    {{activeSaml}}
-                    </div>
                 </div>
 
                 <div id="tab-request">
diff --git a/unpacked/panel/vendor/assets/stylesheets/codemirror.css b/unpacked/panel/vendor/assets/stylesheets/codemirror.css
index 4c861b2..a90bb98 100644
--- a/unpacked/panel/vendor/assets/stylesheets/codemirror.css
+++ b/unpacked/panel/vendor/assets/stylesheets/codemirror.css
@@ -3,7 +3,7 @@
 .CodeMirror {
   /* Set height, width, borders, and global font properties here */
   font-family: monospace;
-  height: 300px;
+  height: 100%;
   color: black;
   font-size: 12px;
 }
